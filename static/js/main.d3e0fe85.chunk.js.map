{"version":3,"sources":["App.js","index.js"],"names":["App","useSpring","colors","useState","fetchedData","setFetchData","author","setAuthor","quote","setQuote","show","setShow","dataColor","setDataColor","useEffect","getData","a","axios","get","data","backgroundProp","from","backgroundColor","to","delay","config","stiff","fade","opacity","color","reverse","onRest","div","style","className","id","class","span","href","title","target","rel","button","onClick","RandomColor","Math","floor","random","length","console","log","randomQuote","quotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySA8HeA,MAzHf,WACEC,sBAEA,IAAMC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGF,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,cAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBACxB,yDADF,mBAAOK,EAAP,KAAcC,EAAd,KAGA,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAkCR,mBAAS,SAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IACvB,0IAFY,OACRC,EADQ,OAIdd,EAAac,GAJC,2CAAH,qDAObJ,MACC,IAkBH,IAAMK,EAAiBnB,oBAAU,CAC/BoB,KAAM,CAAEC,gBAAiB,SACzBC,GAAI,CAAED,gBAAiBV,GACvBY,MAAO,IACPC,OAAQA,SAAOC,QAGXC,EAAO1B,oBAAU,CACrBsB,GAAI,CAAEK,QAAS,EAAGC,MAAOjB,GACzBS,KAAM,CAAEO,QAAS,EAAGC,MAAO,SAC3BJ,OAAQA,SAAOC,MACfI,QAASpB,EAETqB,OAAQ,kBAAMpB,GAAQ,MAExB,OACE,cAAC,WAASqB,IAAV,CAAcC,MAAOb,EAAgBc,UAAU,MAA/C,SACE,sBAAKC,GAAG,UAAR,UACE,sBAAKA,GAAG,YAAR,UACE,eAAC,WAASH,IAAV,CAAcC,MAAON,EAAMS,MAAM,aAAjC,UACE,mBAAGA,MAAM,mBAAT,eACA,sBAAMD,GAAG,OAAT,SAAiB3B,OAEnB,qBAAK4B,MAAM,eAAX,SACE,eAAC,WAASC,KAAV,CAAeJ,MAAON,EAAMQ,GAAG,SAA/B,eACK7B,OAGP,sBAAK8B,MAAM,UAAX,UACE,cAAC,WAASpB,EAAV,CACEiB,MAAOb,EACPkB,KAAK,6CACLF,MAAM,SACND,GAAG,cACHI,MAAM,oBACNC,OAAO,OANT,SAQE,mBAAGJ,MAAM,oBAEX,cAAC,WAASpB,EAAV,CACEiB,MAAOb,EACPkB,KAAK,6CACLF,MAAM,SACND,GAAG,eACHI,MAAM,6BACNC,OAAO,SACPC,IAAI,aAPN,SASE,mBAAGL,MAAM,mBAEX,cAAC,WAASM,OAAV,CACET,MAAOb,EACPgB,MAAM,SACND,GAAG,YACHQ,QAhEZ,WACE,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAW7C,EAAO8C,QACpDC,QAAQC,IAAIN,GACZ,IAAIO,EARG/C,EAAYe,KAAKiC,OACtBP,KAAKC,MAAMD,KAAKE,SAAW3C,EAAYe,KAAKiC,OAAOJ,SAQrDvC,EAAS0C,EAAY3C,OACrBD,EAAU4C,EAAY7C,QACtBK,GAASD,GACTG,EAAaX,EAAO0C,KAqDZ,6BAUJ,sBAAKR,MAAM,SAAX,gBACK,mBAAGE,KAAK,4BAAR,iCCjHbe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d3e0fe85.chunk.js","sourcesContent":["import \"./App.scss\"\nimport axios from \"axios\"\nimport { useState, useEffect } from \"react\"\nimport { useSpring, animated, config } from \"react-spring\"\n\nfunction App() {\n  useSpring()\n\n  const colors = [\n    \"#16a085\",\n    \"#27ae60\",\n    \"#2c3e50\",\n    \"#f39c12\",\n    \"#e74c3c\",\n    \"#9b59b6\",\n    \"#FB6964\",\n    \"#342224\",\n    \"#472E32\",\n    \"#BDBB99\",\n    \"#77B1A9\",\n    \"#73A857\",\n  ]\n\n  const [fetchedData, setFetchData] = useState([])\n  const [author, setAuthor] = useState(\"Steve Jobs\")\n  const [quote, setQuote] = useState(\n    \"The only way to do great work is to love what you do.\"\n  )\n  const [show, setShow] = useState(false)\n  const [dataColor, setDataColor] = useState(\"brown\")\n\n  useEffect(() => {\n    const getData = async () => {\n      const data = await axios.get(\n        \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n      )\n      setFetchData(data)\n    }\n\n    getData()\n  }, [])\n\n  function getRandomQuote() {\n    return fetchedData.data.quotes[\n      Math.floor(Math.random() * fetchedData.data.quotes.length)\n    ]\n  }\n\n  function getQuote() {\n    let RandomColor = Math.floor(Math.random() * colors.length)\n    console.log(RandomColor)\n    let randomQuote = getRandomQuote()\n    setQuote(randomQuote.quote)\n    setAuthor(randomQuote.author)\n    setShow(!show)\n    setDataColor(colors[RandomColor])\n  }\n\n  const backgroundProp = useSpring({\n    from: { backgroundColor: \"white\" },\n    to: { backgroundColor: dataColor },\n    delay: 400,\n    config: config.stiff,\n  })\n\n  const fade = useSpring({\n    to: { opacity: 1, color: dataColor },\n    from: { opacity: 0, color: \"white\" },\n    config: config.stiff,\n    reverse: show,\n\n    onRest: () => setShow(false),\n  })\n  return (\n    <animated.div style={backgroundProp} className=\"App\">\n      <div id=\"wrapper\">\n        <div id=\"quote-box\">\n          <animated.div style={fade} class=\"quote-text\">\n            <i class=\"fa fa-quote-left\"> </i>\n            <span id=\"text\">{quote}</span>\n          </animated.div>\n          <div class=\"quote-author\">\n            <animated.span style={fade} id=\"author\">\n              - {author}\n            </animated.span>\n          </div>\n          <div class=\"buttons\">\n            <animated.a\n              style={backgroundProp}\n              href=\"https://codepen.io/freeCodeCamp/pen/qRZeGZ\"\n              class=\"button\"\n              id=\"tweet-quote\"\n              title=\"Tweet this quote!\"\n              target=\"_top\"\n            >\n              <i class=\"fa fa-twitter\"></i>\n            </animated.a>\n            <animated.a\n              style={backgroundProp}\n              href=\"https://codepen.io/freeCodeCamp/pen/qRZeGZ\"\n              class=\"button\"\n              id=\"tumblr-quote\"\n              title=\"Post this quote on tumblr!\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <i class=\"fa fa-tumblr\"></i>\n            </animated.a>\n            <animated.button\n              style={backgroundProp}\n              class=\"button\"\n              id=\"new-quote\"\n              onClick={getQuote}\n            >\n              New quote\n            </animated.button>\n          </div>\n        </div>\n        <div class=\"footer\">\n          by <a href=\"https://codepen.io/hezag/\">Jose Angel</a>\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}